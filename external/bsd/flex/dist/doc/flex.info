This is flex.info, produced by makeinfo version 4.8 from flex.texi.

INFO-DIR-SECTION Programming
START-INFO-DIR-ENTRY
* flex: (flex).      Fast lexical analyzer generator (lex replacement).
END-INFO-DIR-ENTRY

   The flex manual is placed under the same licensing conditions as the
rest of flex:

   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007 The Flex
Project.

   Copyright (C) 1990, 1997 The Regents of the University of California.
All rights reserved.

   This code is derived from software contributed to Berkeley by Vern
Paxson.

   The United States Government has rights in this work pursuant to
contract no. DE-AC03-76SF00098 between the United States Department of
Energy and the University of California.

   Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

  1.  Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

  2. Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the
     distribution.

   Neither the name of the University nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

   THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


Indirect:
flex.info-1: 1620
flex.info-2: 287921

Tag Table:
(Indirect)
Node: Top1620
Node: Copyright7690
Node: Reporting Bugs9203
Node: Introduction9508
Node: Simple Examples10336
Node: Format13646
Node: Definitions Section14060
Ref: Definitions Section-Footnote-116323
Node: Rules Section16391
Node: User Code Section17549
Node: Comments in the Input17987
Node: Patterns19355
Ref: case and character ranges26186
Node: Matching30201
Node: Actions33487
Node: Generated Scanner42466
Node: Start Conditions47484
Node: Multiple Input Buffers58043
Ref: Scanning Strings64581
Node: EOF66211
Node: Misc Macros67799
Node: User Values70653
Node: Yacc72984
Node: Scanner Options73880
Node: Options for Specifying Filenames76638
Ref: option-header76864
Ref: option-outfile77576
Ref: option-stdout77901
Node: Options Affecting Scanner Behavior78883
Ref: option-case-insensitive79124
Ref: option-lex-compat79557
Ref: option-batch80089
Ref: option-interactive80613
Ref: option-7bit81967
Ref: option-8bit83271
Ref: option-default83683
Ref: option-always-interactive83747
Ref: option-posix84351
Ref: option-stack85498
Ref: option-stdinit85606
Ref: option-yylineno86084
Ref: option-yywrap86527
Node: Code-Level And API Options86795
Ref: option-ansi-definitions87022
Ref: option-ansi-prototypes87274
Ref: option-bison-bridge87521
Ref: option-bison-locations87860
Ref: option-noline88120
Ref: option-reentrant88634
Ref: option-c++89245
Ref: option-array89371
Ref: option-pointer89469
Ref: option-prefix89597
Ref: option-main91126
Ref: option-nounistd91310
Ref: option-yyclass91818
Node: Options for Scanner Speed and Size92304
Ref: option-align92853
Ref: option-ecs93354
Ref: option-meta-ecs94390
Ref: option-read94877
Ref: option-full96760
Ref: option-fast96955
Node: Debugging Options97881
Ref: option-backup98068
Ref: option-debug98613
Ref: option-perf-report99336
Ref: option-nodefault99962
Ref: option-trace100280
Ref: option-nowarn100571
Ref: option-verbose100639
Ref: option-warn101068
Node: Miscellaneous Options101287
Node: Performance101744
Node: Cxx112008
Node: Reentrant119531
Node: Reentrant Uses120208
Node: Reentrant Overview121771
Node: Reentrant Example122570
Node: Reentrant Detail123345
Node: Specify Reentrant123778
Node: Extra Reentrant Argument124425
Node: Global Replacement125677
Node: Init and Destroy Functions126906
Node: Accessor Methods129418
Node: Extra Data130762
Node: About yyscan_t133029
Node: Reentrant Functions133425
Ref: bison-functions134909
Node: Lex and Posix135650
Node: Memory Management143034
Ref: memory-management143180
Node: The Default Memory Management143408
Ref: The Default Memory Management-Footnote-1147217
Node: Overriding The Default Memory Management147370
Ref: Overriding The Default Memory Management-Footnote-1149769
Node: A Note About yytext And Memory149933
Node: Serialized Tables151166
Ref: serialization151310
Node: Creating Serialized Tables152075
Node: Loading and Unloading Serialized Tables153685
Node: Tables File Format155453
Node: Diagnostics162468
Node: Limitations165879
Node: Bibliography167828
Node: FAQ168501
Node: When was flex born?172741
Node: How do I expand backslash-escape sequences in C-style quoted strings?173118
Node: Why do flex scanners call fileno if it is not ANSI compatible?174422
Node: Does flex support recursive pattern definitions?175217
Node: How do I skip huge chunks of input (tens of megabytes) while using flex?176064
Node: Flex is not matching my patterns in the same order that I defined them.176531
Node: My actions are executing out of order or sometimes not at all.178277
Node: How can I have multiple input sources feed into the same scanner at the same time?179052
Node: Can I build nested parsers that work with the same input file?181040
Node: How can I match text only at the end of a file?182046
Node: How can I make REJECT cascade across start condition boundaries?182851
Node: Why cant I use fast or full tables with interactive mode?183866
Node: How much faster is -F or -f than -C?185124
Node: If I have a simple grammar cant I just parse it with flex?185436
Node: Why doesn't yyrestart() set the start state back to INITIAL?185917
Node: How can I match C-style comments?186544
Node: The period isn't working the way I expected.187358
Node: Can I get the flex manual in another format?188605
Node: Does there exist a "faster" NDFA->DFA algorithm?189094
Node: How does flex compile the DFA so quickly?189604
Node: How can I use more than 8192 rules?190571
Node: How do I abandon a file in the middle of a scan and switch to a new file?191983
Node: How do I execute code only during initialization (only before the first scan)?192536
Node: How do I execute code at termination?193314
Node: Where else can I find help?193640
Node: Can I include comments in the "rules" section of the file?194013
Node: I get an error about undefined yywrap().194392
Node: How can I change the matching pattern at run time?194869
Node: How can I expand macros in the input?195231
Node: How can I build a two-pass scanner?196264
Node: How do I match any string not matched in the preceding rules?197180
Node: I am trying to port code from AT&T lex that uses yysptr and yysbuf.198090
Node: Is there a way to make flex treat NULL like a regular character?198885
Node: Whenever flex can not match the input it says "flex scanner jammed".199406
Node: Why doesn't flex have non-greedy operators like perl does?200050
Node: Memory leak - 16386 bytes allocated by malloc.201403
Ref: faq-memory-leak201701
Node: How do I track the byte offset for lseek()?202669
Node: How do I use my own I/O classes in a C++ scanner?204180
Node: How do I skip as many chars as possible?205023
Node: deleteme00206100
Node: Are certain equivalent patterns faster than others?206541
Node: Is backing up a big deal?209960
Node: Can I fake multi-byte character support?211867
Node: deleteme01213309
Node: Can you discuss some flex internals?214419
Node: unput() messes up yy_at_bol216664
Node: The | operator is not doing what I want217767
Node: Why can't flex understand this variable trailing context pattern?219314
Node: The ^ operator isn't working220564
Node: Trailing context is getting confused with trailing optional patterns221800
Node: Is flex GNU or not?223044
Node: ERASEME53224718
Node: I need to scan if-then-else blocks and while loops225489
Node: ERASEME55226689
Node: ERASEME56227788
Node: ERASEME57229147
Node: Is there a repository for flex scanners?230146
Node: How can I conditionally compile or preprocess my flex input file?230461
Node: Where can I find grammars for lex and yacc?230934
Node: I get an end-of-buffer message for each character scanned.231281
Node: unnamed-faq-62231876
Node: unnamed-faq-63232895
Node: unnamed-faq-64234193
Node: unnamed-faq-65235160
Node: unnamed-faq-66235947
Node: unnamed-faq-67237063
Node: unnamed-faq-68238051
Node: unnamed-faq-69239194
Node: unnamed-faq-70239908
Node: unnamed-faq-71240670
Node: unnamed-faq-72241880
Node: unnamed-faq-73242924
Node: unnamed-faq-74243849
Node: unnamed-faq-75244795
Node: unnamed-faq-76245928
Node: unnamed-faq-77246635
Node: unnamed-faq-78247529
Node: unnamed-faq-79248528
Node: unnamed-faq-80250229
Node: unnamed-faq-81251548
Node: unnamed-faq-82254349
Node: unnamed-faq-83255307
Node: unnamed-faq-84257088
Node: unnamed-faq-85258192
Node: unnamed-faq-86259200
Node: unnamed-faq-87260139
Node: unnamed-faq-88260786
Node: unnamed-faq-90261618
Node: unnamed-faq-91262882
Node: unnamed-faq-92265311
Node: unnamed-faq-93265811
Node: unnamed-faq-94266739
Node: unnamed-faq-95268152
Node: unnamed-faq-96269671
Node: unnamed-faq-97270431
Node: unnamed-faq-98271099
Node: unnamed-faq-99271765
Node: unnamed-faq-100272695
Node: unnamed-faq-101273406
Node: What is the difference between YYLEX_PARAM and YY_DECL?274220
Node: Why do I get "conflicting types for yylex" error?274742
Node: How do I access the values set in a Flex action from within a Bison action?275272
Node: Appendices275703
Node: Makefiles and Flex275912
Ref: Makefiles and Flex-Footnote-1279112
Ref: Makefiles and Flex-Footnote-2279229
Ref: Makefiles and Flex-Footnote-3279415
Node: Bison Bridge279466
Ref: Bison Bridge-Footnote-1282135
Node: M4 Dependency282327
Ref: M4 Dependency-Footnote-1283732
Node: Common Patterns283867
Node: Numbers284158
Node: Identifiers285135
Node: Quoted Constructs285964
Node: Addresses287017
Node: Indices287683
Node: Concept Index287921
Node: Index of Functions and Macros313204
Node: Index of Variables318100
Node: Index of Data Types319766
Node: Index of Hooks320654
Node: Index of Scanner Options321222

End Tag Table
